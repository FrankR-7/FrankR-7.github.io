{"version":3,"sources":["Todo.js","TodoList.js","App.js","index.js"],"names":["Todo","todo","funcs","className","type","checked","complete","onChange","id","name","onClick","TodoList","todos","length","map","key","App","useState","setTodos","todoName","useRef","addTodo","e","current","value","prevTodos","uuidv4","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","ref","placeholder","onKeyPress","newTodos","filter","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLAEe,SAASA,EAAT,GAA8B,IAAfC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,MAShC,OACI,yBAAKC,UAAW,QACZ,6BACI,2BAAOC,KAAK,WAAWC,QAASJ,EAAKK,SAAUC,SAX3D,WACIL,EAAM,GAAGD,EAAKO,OAWN,+BAAQP,EAAKQ,OAEjB,4BAAQC,QAVhB,WACIR,EAAM,GAAGD,EAAKO,KASgBL,UAAW,UAArC,WCdG,SAASQ,EAAT,GAAmC,IAAhBC,EAAe,EAAfA,MAAOV,EAAQ,EAARA,MACrC,OAAqB,IAAjBU,EAAMC,OAEF,2BAAOV,UAAW,QAAlB,wBAKJS,EAAME,KAAI,SAAAb,GACN,OAAO,kBAACD,EAAD,CAAMe,IAAKd,EAAKO,GAAIP,KAAMA,EAAMC,MAAOA,O,kBCwD3Cc,MA7Df,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNL,EADM,KACCM,EADD,KAEPC,EAAWC,mBAkBjB,SAASC,EAAQC,GACf,IAAMb,EAAOU,EAASI,QAAQC,MACjB,KAATf,IACJS,GAAS,SAAAO,GACP,MAAM,CAAE,CAACjB,GAAGkB,cAAUjB,KAAKA,EAAMH,UAAS,IAA1C,mBAAqDmB,OAEvDN,EAASI,QAAQC,MAAQ,MAmB3B,OAzCAG,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAPtB,kBAQlBJ,GAAaV,EAASU,KACzB,IAEHD,qBAAU,WACRI,aAAaE,QAZS,gBAYkBJ,KAAKK,UAAUtB,MACtD,CAACA,IAmCF,oCACA,yBAAKT,UAAW,OACd,4BAAQA,UAAW,QAAnB,iBACA,yBAAKA,UAAW,SACd,2BAAOC,KAAK,OAAO+B,IAAKhB,EAAUiB,YAAa,0BAA2BC,WArBhF,SAA0Bf,GACX,SAATA,EAAEP,KACJM,OAoBE,4BAAQX,QAASW,GAAjB,YACA,4BAAQX,QAjBd,WACE,IAAM4B,EAAW1B,EAAM2B,QAAO,SAAAtC,GAAI,OAAKA,EAAKK,YAC5CY,EAASoB,KAeL,oBAEF,yBAAKnC,UAAW,aAAcS,EAAM2B,QAAO,SAAAtC,GAAI,OAAKA,EAAKK,YAAUO,OAAnE,eACA,kBAACF,EAAD,CAAUC,MAAOA,EAAOV,MAAO,CA1CnC,SAAoBM,GAClB,IAAM8B,EAAQ,YAAO1B,GACfX,EAAOqC,EAASE,MAAK,SAAAvC,GAAI,OAAIA,EAAKO,KAAOA,KAC/CP,EAAKK,UAAYL,EAAKK,SACtBY,EAASoB,IAuBX,SAAmB9B,GACjB,IAAM8B,EAAQ,YAAO1B,GACrBM,EAASoB,EAASC,QAAO,SAAAtC,GAAI,OAAIA,EAAKO,KAAOA,aC7CjDiC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.fc3f28a6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Todo({todo, funcs}) {\r\n    function toggled() {\r\n        funcs[0](todo.id)\r\n    }\r\n\r\n    function deleted() {\r\n        funcs[1](todo.id)\r\n    }\r\n    \r\n    return (\r\n        <div className={'todo'}>\r\n            <div>\r\n                <input type='checkbox' checked={todo.complete} onChange={toggled} />\r\n                <label>{todo.name}</label>\r\n            </div>\r\n            <button onClick={deleted} className={'delete'}>Delete</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\nexport default function TodoList({todos, funcs}) {\r\n    if (todos.length === 0) {\r\n        return (\r\n            <label className={'todo'}>Nothing to do... yet</label>\r\n        )\r\n    }\r\n\r\n    return (\r\n        todos.map(todo => {\r\n            return <Todo key={todo.id} todo={todo} funcs={funcs} />\r\n        })\r\n    )\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\nimport TodoList from './TodoList'\nimport './index.css'\nimport {v4 as uuidv4} from 'uuid'\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const todoName = useRef()\n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if (storedTodos) setTodos(storedTodos)\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  }, [todos])\n\n  function toggleTodo(id) {\n    const newTodos = [...todos]\n    const todo = newTodos.find(todo => todo.id === id)\n    todo.complete = !todo.complete\n    setTodos(newTodos)\n  }\n\n  function addTodo(e) {\n    const name = todoName.current.value\n    if (name === '') return\n    setTodos(prevTodos => {\n      return [{id:uuidv4(), name:name, complete:false}, ...prevTodos]\n    })\n    todoName.current.value = null\n  }\n\n  function enterKeyListener(e) {\n    if (e.key == 'Enter') {\n      addTodo(e)\n    }\n  }\n\n  function clearCompleted() {\n    const newTodos = todos.filter(todo => !todo.complete)\n    setTodos(newTodos)\n  }\n\n  function eraseTodo(id) {\n    const newTodos = [...todos]\n    setTodos(newTodos.filter(todo => todo.id !== id))\n  }\n\n  return (\n    <>\n    <div className={'app'}>\n      <header className={'name'}>Mini TodoList</header>\n      <div className={'input'}>\n        <input type='text' ref={todoName} placeholder={'What do you want to do?'} onKeyPress={enterKeyListener}/>\n        <button onClick={addTodo} >Add Todo</button>\n        <button onClick={clearCompleted} >Clear Completed</button>\n      </div>\n      <div className={'remaining'}>{todos.filter(todo => !todo.complete).length} left to do</div>\n      <TodoList todos={todos} funcs={[toggleTodo, eraseTodo]} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}